# tutorial : https://ithelp.ithome.com.tw/users/20091494/ironman/4464
name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:

  clang-format-check:
    runs-on: ubuntu-latest
    steps:
    # https://github.com/marketplace/actions/checkout
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Run clang-format style check for C/C++/Protobuf programs.
      uses: jidicula/clang-format-action@v4.15.0
      with:
        clang-format-version: '20'

  cppcheck:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/checkout
      - name: Check out repository code
        uses: actions/checkout@v3

      # https://github.com/marketplace/actions/cppcheck-action
      - name: Run Cppcheck
        uses: deep5050/cppcheck-action@v3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          enable: warning
          std: c++17
          other_options: -D _WIN32 -DLOG_LEVEL=0
          output_file: result.txt
          inconclusive: disable

      # https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload Result
        uses: actions/upload-artifact@v4
        with:
          name: Cppcheck_result
          path: ./result.txt

      - name: Fail if Cppcheck found issues
        run: |
          if grep -q . result.txt; then
            echo "❌ Cppcheck found issues:"
            cat result.txt
            exit 1
          else
            echo "✅ Cppcheck clean."
          fi

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Init ubuntu and basic tool chain
        run: |
          sudo apt update
          sudo apt install build-essential -y

      # https://github.com/marketplace/actions/checkout
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: make dircetory
        run: mkdir build

      # https://github.com/marketplace/actions/install-ninja-build-tool
      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v5

      # https://github.com/marketplace/actions/cmake-action
      - name: Build with cmake
        uses: threeal/cmake-action@v2.1.0
        with:
          generator: Ninja
          cxx-compiler: g++
          build-dir: build
          options: |
            LOG_LEVEL=0
            ENABLE_TEST=ON
          run-build: true

      # https://github.com/marketplace/actions/zip-release
      - name: Compress to zip
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          filename: 'build.zip'
          directory: . # default
          path: build

      # https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload Result
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./build.zip

  test_project:
    name: Test Project
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      # https://github.com/marketplace/actions/download-a-build-artifact
      - name: Donload build archive
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Unzip Folder
        run: |
          unzip build.zip

      # https://github.com/marketplace/actions/get-cmake
      - name: Setup Cmake
        uses: lukka/get-cmake@latest
      
      - name: Start Testing
        run: |
          cd build
          ctest